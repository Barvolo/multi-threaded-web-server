Bonus Features Overview:
------------------------
Our project goes beyond the basic requirements to enhance user experience and adhere to best coding practices. Here's a detailed explanation of the bonus functionalities we've implemented:

1. Object-Oriented Design:
We've embraced object-oriented programming principles throughout our server's codebase. This includes encapsulation by keeping server state and behavior within well-defined classes, inheritance for sharing common functionality between classes, and polymorphism allowing us to override or overload methods to handle specific cases more effectively. This design choice improves code maintainability, scalability, and readability.

2. Interactive Main Page:
On the main page (index.html), we introduced rotating images of ourselves to add a personal and dynamic touch. This was achieved using advanced CSS animations and JavaScript, creating a more engaging user experience right from the homepage.

3. Custom Error Handler Page with Visuals:
We designed a custom error handler page (errors.html) that not only provides informative error messages but also includes rotating sad faces of ourselves, aligning with the theme from the main page. This visual approach to error handling aims to soften the impact of errors by adding a humorous, personalized touch. Additionally, we included an option to return to the main page, enhancing navigation and user flow.

4. Enhanced CSS Design:
Significant effort was invested in CSS to ensure a user-friendly experience across the application. This includes responsive design elements that adapt to various screen sizes, custom fonts for improved readability, and a cohesive color scheme that aligns with our branding. The result is a visually appealing interface that enhances overall usability.

5. Log Coloring and Timestamps:
To aid in server management and debugging, we implemented log coloring and timestamping. Log entries are color-coded to distinguish between informational messages, warnings, and errors at a glance, enhancing readability and issue diagnosis. Each entry is also timestamped in the "yyyy-MM-dd HH:mm:ss" format, providing exact timing for events and actions. This feature supports better monitoring and troubleshooting by offering a clear, chronological log of server operations.

Importance of Bonus Features:
------------------------------
These enhancements were carefully chosen to complement the core functionalities of our web server without replacing any required features. Our goal was to demonstrate our commitment to quality, attention to detail, and our ability to innovate within the constraints of the project requirements.

- The object-oriented design underscores our adherence to best coding practices, ensuring our server is robust, extensible, and easy to maintain.
- The interactive and visually appealing error handling not only makes technical issues less frustrating for users but also showcases our creativity and user-centric approach.
- The meticulous CSS design enhances the aesthetic appeal and usability of our application, ensuring a pleasant and intuitive user experience.
- Log coloring and timestamps enhance operational transparency, enabling quick identification and resolution of issues, thereby improving server reliability and maintenance efficiency.

Note: While we are proud of these enhancements, we understand that bonus points are at the discretion of the evaluators. Our primary aim was to exceed expectations and deliver a project that stands out for its quality and innovation.
